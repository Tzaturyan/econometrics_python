* Псевдослучайные числа и статистические экспрерименты *
* Генерирование псевдослучайные чисел *
* set seed - задаёт начальное значение, set obs - колл-во наблюдений, gen - генерация переменной, uniform() - генерация псевдослучайных чисел *
clear
set seed 34567
set obs 100
number of observations (_N) was 0, now 100
gen x = uniform()
* Для равномерного распределения используем функцию *
* a+(b-a)*uniform() *
* Для получения только целых чисел используем *
* a+int((b-a+1)*uniform()) *
* Для расчета стандартных нормальных псевдослучайных чисел можно использовать следующие сочетание *
* invnormal(uniform()) *
* Нормальное распределение с матиматическим ожиданием m и стандартным отклонением m можно получить линейным преобразованием *
* m+s*invnormal(uniform()) *
* Практические примеры *
* Задание 1. Генерирование псевдослучайных чисел, распределенных по основным законам математической статистики. Сгенерируйте 10 рядов стандартных нормальных псевдослучайных чисел длиной в 50 наблюдений.Получите из них ряды чисел с распределениями x10^2, x1^2, x4^2, x6^2, t6, F4.6, F4.6. *
* Данное распределение называется хи-квадрат *
* Для генерации нормального распределения чисел используем команду drawnorm *
clear
set seed 3000100
* Создание вектора размером 10 из нулей, вектор математических ожиданий *
matrix A = J(10,1,0)
* Создание единичной матрицы размером 10, ковариационная матрица *
matrix B = I(10)
* Генерирование 10 переменных со стандартными нормальными числами *
drawnorm z1-z10, means(A) cov(B) n(50)
* Функции плотности для некоторых z *
twoway kdensity z1 ipattern(splid) || kdensity z2 ipattern(dash) kdensity z9 ipattern(dot) || kdensity z10 ipattern(dash_dot)
twoway kdensity z1, lpattern(solid) || kdensity z2, lpattern(dash) ||  kdensity z9,  lpattern(dot) || kdensity z10, lpattern(dash_dot)
* Хи-квадрат распределение *
gen chi10 = z1^2+z2^2+z3^2+z4^2+z5^2+z6^2+z7^2+z8^2+z9^2+z10^2
gen chi4 = z1^2+z2^2+z3^2+z4^2
gen chi6 = z5^2+z6^2+z7^2+z8^2+z9^2+z10^2
gen chi1 = z1^2
* Функция плотности хи-квадрат *
twoway kdensity chi1, lpattern(solid) || kdensity chi4, lpattern(dash) || kdensity chi6, lpattern(dot) || kdensity chi1, lpattern(dash_dot)
* t-распределение, распределение Стьюдента *
gen t = z2/sqrt(chi6/6)
 twoway kdensity t
* Сопостовление с нормальным распределением *
twoway kdensity t, lpattern(solid) || kdensity z2, lpattern(dash)
* F-распределение *
gen F46 = (chi4/4)/(chi6/6)
gen F64 = (chi6/6)/(chi4/4)
twoway kdensity F46, lpattern(solid) || kdensity F64, lpattern(dash)
* Задание 3. Генерирование псевдослучайных наборов данных. Проверка гипотез *
* Сгенерируйте две независимые нормально распределенные случайные величины с математическим ожиданием 2 и 5 соответственно и с дисперсией 1. Число наблюдений равно 500. Назовите их x1 и x2. Постройте диаграмму рассеяния для x1 и x2.
* Сгенерируйте стандартную нормальную случайную величину. Назовите ее эпсила. *
* Постройте гистограмму распределения для эпсилы *
* Создайте переменную y=5x1-3x2+e *
* Найдите описательные статистики переменных x1, x2, y. Постройте для них корреляционную матрицую *
* Постройте график y как функцию от x1 *
* Постройте два графика в одном окне y как функцию от x1 и y как функцию от x2 *
* Оцените линейную регрессию методом наименьших квадратов: y=a+B1x1+B2x2+e, или в матричной форме Y=XB+e *
* Прокомментируйте содержимое таблицы результатов *
* Выведите на экран оценку ковариационной матрицы коэффицентов регрессии. *
* Проверьте гипотезу о равенстве среднего для x1 значению u=1,5 *
* Гипотезу о равенстве средних x1 и x2, гипотезу о равенстве дисперсий x1 и x2 *
clear
* Генерирование вектора математических ожиданий *
matrix M = (2,5)
* Генерирование ковариационной матрицы *
matrix C = (1, 0 \ 0, 1)
set seed 200000
* Генерирование двух независимых нормальныхслучайных величин *
drawnorm x1 x2, means(M) cov (C) n(500)
* Построение диаграммы рассеяния *
scatter x1 x2
graph save Graph "C:\Users\Артур\Desktop\Graph_6.gph"
* graph_6 *
* Генерирование случайной ошибки *
drawnorm epsilon
* Вывод гистограммы распределения *
hist epsilon
* Вывод выборочной функции плотности *
kdensity epsilon, lpattern(dash) addplot(normal)
* Генерирование зависимой переменной *
gen y = 2+5*x1-3*x2+epsilon
* Вывод описательных статистик *
summarize y x1 x2
* Вывод корреляционной матрицы *
pwcorr y x1 x2, sig star(0.05)
* Оценивание линейной регрессии методом наименьших квадратов *
reg y x1 x2
 * Запоминание ковариационной матрицы коэффицентов *
matrix cov = e(V)
* Вывод ковариационной матрицы на экран *
matrix list cov
* Вывод графиков *
twoway scatter y x1
graph save Graph "C:\Users\Артур\Desktop\Graph_9.gph"
twoway scatter y x2
* Проверка гипотез *
* Гипотеза о равенстве среднего значения x1 1,5 *
ttest x1=1.5
* Гипотеза о равенстве двух средних *
ttest x1=x2
sdtest x1=x2
 * Результаты проверки гипотез *
* О равенстве среднего значения x1 = 1,5 *
* Гипотеза о том, что среднее значение x1 = 1,5 отвергается на 1% уровне *
* О равенстве средних x1 и x2 *
* Гипотеза о равенстве средних отвергается, если в качестве альтернативной гипотезы рассматривается двустроронняя гипотеза *
* О равенстве дисперсий x1 и x2 *
* Мы не можем отвергнуть гипотезу о равенстве стандартных отклонений *
* Бутстрап *
* Рассмотрим набор наблюдений *
clear
set obs 12
set seed 1699
gen x=50+int(invnorm(uniform())*10)
list x
* Рассчитайте 90% процентильный бутстраповский доверительный интервал для среднего и аналогичный интервал на основе нормального приближения для указанного набора наблюдений *
set more off
clear
set obs 12
set seed 1699
gen x=50+int(invnorm(uniform())*10)
bootstrap m=r(mean), reps(5000) level(90): sum x 
estat bootstrap, percentile
set more on
* Первая часть содержит доверитильный интервал на основе нормального распределения: (44,53; 51,30). Затем идет процентильный бутстраповский доверительный интервал, который выдается командой estat bootstrap, percentile. Это интервал от 44,5 до 51,25 *
